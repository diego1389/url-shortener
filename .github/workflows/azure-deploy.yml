name: 'Azure Deploy'

on:
  push:
    branches: 
      - main
    paths:
      - infrastructure/**
  pull_request:
    branches:
      - main
    paths:
      - infrastructure/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-stg:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: Check Azure credentials
        run: |
          if [ -z "${{ secrets.AZURE_CLIENT_ID }}" ]; then echo "AZURE_CLIENT_ID is NOT set"; else echo "AZURE_CLIENT_ID is set"; fi
          if [ -z "${{ secrets.AZURE_TENANT_ID }}" ]; then echo "AZURE_TENANT_ID is NOT set"; else echo "AZURE_TENANT_ID is set"; fi
          if [ -z "${{ vars.AZURE_SUBSCRIPTION_ID }}" ]; then echo "AZURE_SUBSCRIPTION_ID is NOT set"; else echo "AZURE_SUBSCRIPTION_ID is set"; fi

      - name: Check resource group variables
        run: |
          if [ -z "${{ vars.RESOURCE_GROUP_NAME }}" ]; then echo "RESOURCE_GROUP_NAME is NOT set"; else echo "RESOURCE_GROUP_NAME is set"; fi
          if [ -z "${{ vars.RESOURCE_GROUP_LOCATION }}" ]; then echo "RESOURCE_GROUP_LOCATION is NOT set"; else echo "RESOURCE_GROUP_LOCATION is set"; fi
          
      - name: Create resource group
        uses: azure/CLI@v2
        env:
          RG_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
          RG_LOCATION: ${{ vars.RESOURCE_GROUP_LOCATION }}
        with:
          inlineScript: |
            az group create --name "$RG_NAME" --location "$RG_LOCATION"
            echo "Azure resource group created successfully."

      - name: Deploy
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          template: ./infrastructure/main.bicep
